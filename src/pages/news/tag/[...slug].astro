---
/* BLOG ARCHIVE PAGES BY TAG */

import { getCollection, getEntry } from "astro:content";
import PageLayout from "@layouts/PageLayout.astro";
import Intersecting from "@components/common/Intersecting.vue";
import ItemCard from "@components/cards/ItemCard.astro";
import Pager from "@components/navigation/Pager.astro";
import { slugify, getCategoryData, getPagination } from "@util/helpers";
export async function getStaticPaths({ paginate }) {
  const posts = (await getCollection("blog"))
    .sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf())
    .filter((post) => !!post.data?.tag);

  const { data } = await getEntry("config", "blog");
  const allFilters = posts
    .map((post) => post.data.tag)
    .filter((post) => !!post);
  const filters = [...new Set(allFilters.flat(1))];

  return getPagination(posts, filters, data, "tag");
}

const { lastPage, currentPage, page, filter, filters, filter_type, tag } =
  Astro.props;
let { data } = await getEntry("config", "blog");

const base_url = import.meta.env.BLOG_SLUG;

const pageData = getCategoryData(data.blog_tags, filter);
data = {
  ...data,
  ...pageData,
};

const pagerSlug = `${base_url}/${filter_type}/${slugify(filter)}`;
---

<PageLayout
  page={{
    data: page,
    lastPage: lastPage,
    currentPage: currentPage,
  }}
  {...data}
  {filters}
  {filter}
  {base_url}
  {tag}
>
  <section>
    <ul class={`grid grid-cols-1 sm:grid-cols-2 gap-20  pb-20 `}>
      {
        page.map((post) => (
          <li>
            <Intersecting client:visible>
              <ItemCard
                content={post}
                {base_url}
                sizes="100vw"
                animate={true}
              />
            </Intersecting>
          </li>
        ))
      }
    </ul>
    {
      lastPage > 1 && (
        <div class="container-md pb-4">
          <Pager
            totalPage={lastPage}
            currentPage={currentPage}
            url={pagerSlug}
          />
        </div>
      )
    }
  </section>
</PageLayout>
